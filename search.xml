<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CSAPP Data Lab 学习记录</title>
      <link href="/posts/1a133b13.html"/>
      <url>/posts/1a133b13.html</url>
      
        <content type="html"><![CDATA[<h2 id="开始之前">开始之前</h2><h3 id="下载代码文件">下载代码文件</h3><p>CSAPP的project可以从<a href="https://csapp.cs.cmu.edu/3e/labs.html">官方网站</a>上下载。其中project代码文件在<a href="https://csapp.cs.cmu.edu/3e/datalab-handout.tar">Self-Study Handout</a>链接那里。使用如下命令下载datalab文件，并解压进入目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://csapp.cs.cmu.edu/3e/datalab-handout.tar --no-check-certificate</span><br><span class="line">tar -xvf datalab-handout.tar</span><br><span class="line"><span class="built_in">cd</span> datalab-handout/</span><br></pre></td></tr></table></figure><p>进入这个目录后，可以看到一个名为 bits.c 的文件。这个文件是要去完成的project，所有的题目都在这个文件中。</p><h3 id="检查答案正确性并评分">检查答案正确性并评分</h3><p>当修改好 bits.c 文件后，可以用以下方式检验答案正确性：</p><ol><li><p>检查 bits.c 的代码风格<br>在命令行中使用<code>./dlc bits.c</code>或者<code>./dlc -e bits.c</code>检查。</p><ul><li>对于<code>./dlc bits.c</code>命令，如果 bits.c 没有问题，将什么也不会输出。</li><li>对于<code>./dlc -e bits.c</code>命令，程序将会打印每个函数所用的操作符号数，当然，不算括号、等号。</li></ul></li><li><p>编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make clean</span><br><span class="line">make btest</span><br><span class="line"><span class="comment"># 或者直接一步到位，使用 make clean &amp;&amp; make btest</span></span><br></pre></td></tr></table></figure><p>注意：修改 bits.c 文件后，需要重复以上步骤重新编译。</p><p>当然，不用<code>make btest</code>而是用<code>make</code>命令也是可以的，只不过会比<code>make btest</code>多生成 fshow 和 ishow 两个文件。这两个文件是帮助文件，可以帮忙写出某个数的其它表示。比如<code>./ishow 0x27</code>将会输出<code>Hex = 0x00000027,       Signed = 39,    Unsigned = 39</code>。具体用法可见 datalab-handout 文件夹下 README 文件中的例子。</p></li><li><p>检查 bits.c 中函数的正确性</p><ul><li>使用<code>./btest</code>检查所有函数的正确性并给出总得分（注意：btest检查不出代码风格上的错误）</li><li>使用<code>./btest -f &lt;function-name&gt;</code>检查某一函数的正确性，如<code>./btest -f bitXor</code>检查 bitXor 函数的正确性</li><li>关于 btest 的其他用法，可以在命令行中输入<code>./btest -h</code>查看。</li></ul></li><li><p>评分<br>当完成 bits.c 中全部题目时，可在命令行中输入<code>./driver.pl</code>评分，会输出一个最终分数。</p></li></ol><h2 id="题目的个人解答">题目的个人解答</h2><h3 id="bitXor">bitXor</h3><p>题目要求：只使用 ~ 和 &amp; 实现异或。不使用超过14个运算符。</p><p>思路：由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>⊕</mo><mi>y</mi><mo>=</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mi>y</mi><mo>+</mo><mi>x</mi><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo>=</mo><mover accent="true"><mover accent="true"><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mi>y</mi><mo>+</mo><mi>x</mi><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover></mrow><mo stretchy="true">‾</mo></mover><mo stretchy="true">‾</mo></mover><mo>=</mo><mover accent="true"><mrow><mover accent="true"><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mi>y</mi></mrow><mo stretchy="true">‾</mo></mover><mo>⋅</mo><mover accent="true"><mrow><mi>x</mi><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover></mrow><mo stretchy="true">‾</mo></mover></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">x\oplus y=\bar{x}y+x\bar{y}=\overline{\overline{\bar{x}y+x\bar{y}}}=\overline{\overline{\bar{x}y} \cdot \overline{x\bar{y}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7622em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1778em;vertical-align:-0.1944em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9833em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7833em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span><span style="top:-3.7033em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span><span style="top:-3.9033em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1622em;vertical-align:-0.1944em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.6878em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span><span style="top:-3.6878em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span><span style="top:-3.8878em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span></span></p><p>可得以下代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">bitXor</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ~(~(x&amp;~y)&amp;~(~x&amp;y));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>⊕</mo><mi>y</mi><mo>=</mo><mover accent="true"><mrow><mi>x</mi><mo>⊙</mo><mi>y</mi></mrow><mo stretchy="true">‾</mo></mover><mo>=</mo><mover accent="true"><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo>+</mo><mi>x</mi><mi>y</mi></mrow><mo stretchy="true">‾</mo></mover><mo>=</mo><mover accent="true"><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover></mrow><mo stretchy="true">‾</mo></mover><mo>⋅</mo><mover accent="true"><mrow><mi>x</mi><mi>y</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">x\oplus y=\overline{x\odot y}=\overline{\bar{x}\bar{y}+xy}=\overline{\bar{x}\bar{y}}\cdot \overline{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9778em;vertical-align:-0.1944em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7833em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.7033em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9778em;vertical-align:-0.1944em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7833em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.7033em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9622em;vertical-align:-0.1944em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span><span style="top:-3.6878em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.825em;vertical-align:-0.1944em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span></span></p><p>可得以下代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">bitXor</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ~(~x&amp;~y)&amp;~(x&amp;y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：以上<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding="application/x-tex">\oplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">⊕</span></span></span></span>为异或符号，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊙</mo></mrow><annotation encoding="application/x-tex">\odot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">⊙</span></span></span></span>为同或符号。</p><h3 id="tmin">tmin</h3><p>题目要求：返回最小的补码，即 0x80000000 。只允许使用 ! ~ &amp; ^ | + &lt;&lt; &gt;&gt; 来实现。使用的运算符个数不超过4。</p><p>思路：使用移位运算符即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">tmin</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>&lt;&lt;<span class="number">31</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="isTmax">isTmax</h3><p>题目要求：如果 x 是最大的补码数 (即 0x7fffffff )，则返回1，否则返回0。只允许使用 ! ~ &amp; ^ | + 来实现。使用的运算符个数不超过10。</p><p>思路：真的有种想套用第2题的解法的想法，先用移位运算符 &lt;&lt; 得到 tmin，再取反得到 tmax。可惜题目不给用 &lt;&lt; 。</p><p>这里用的方法是 0x7fffffff 自身的特点：0x7fffffff 反码为 0x80000000 ，两者恰好相差1，所以只需要判断 x+1 与 ~x 相等就行了。而两个数相等又可以用异或来判断。于是得到以下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">isTmax</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> a=~x;</span><br><span class="line">    <span class="type">int</span> b=x+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> !(a^b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提交，怎么没过？看一下错误提示，发现一条信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR: Test isTmax(-1[0xffffffff]) failed...</span><br><span class="line">...Gives 1[0x1]. Should be 0[0x0]</span><br></pre></td></tr></table></figure><p>原来，-1的反码为0，-1加1也等于0，所以需要把-1排除掉（比如检测 ~x 是否为0）。修正后的代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">isTmax</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> a=~x;</span><br><span class="line">    <span class="type">int</span> b=x+<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> nEqual=a^b;</span><br><span class="line">    <span class="type">int</span> isException=!a;</span><br><span class="line">    <span class="keyword">return</span> (!isException)&amp;(!nEqual);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一次就成功通过了。</p><details class="toggle" ><summary class="toggle-button" style="">还有可能存在其它满足~x=x+1的数字吗？</summary><div class="toggle-content"><p>我们知道，~x 满足 x+(~x)=-1。</p><p>如果 x+1 溢出了，x 只有可能为0xffffffff，即-1，刚才已经考虑过了。</p><p>如果 x+1 没有溢出，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>+</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>1</mn><mo>+</mo><mi>n</mi><mo>⋅</mo><msup><mn>2</mn><mn>32</mn></msup></mrow><annotation encoding="application/x-tex">x+(x+1)=-1+n\cdot 2^{32}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">32</span></span></span></span></span></span></span></span></span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo>−</mo><mn>1</mn><mo>+</mo><mi>n</mi><mo>⋅</mo><msup><mn>2</mn><mn>31</mn></msup></mrow><annotation encoding="application/x-tex">x=-1+n\cdot 2^{31}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">31</span></span></span></span></span></span></span></span></span></span></span></span>。考虑到 x 的范围为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mn>31</mn></msup><mo>⩽</mo><mi>x</mi><mo>⩽</mo><msup><mn>2</mn><mn>31</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-2^{31}\leqslant x\leqslant 2^{31}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9508em;vertical-align:-0.1367em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">31</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7733em;vertical-align:-0.1367em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">31</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，因此 x 只有可能为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>31</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{31}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">31</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>(x+1 溢出，不算)</p><p>由此可见，确实不存在其它满足~x=x+1的数字了。</p></div></details><h3 id="allOddBits">allOddBits</h3><p>题目要求：如果 x 的所有奇数位为1 (即1x1x1x1x…的形式，其中x表示0或1)，则返回1，否则返回0。只允许使用 ! ~ &amp; ^ | + &lt;&lt; &gt;&gt; 来实现。使用的运算符个数不超过12。</p><p>思路：这是一道检测位的题目，可用“或”来实现。如果 x 符合题目要求，那么 x|0x55555555=0xffffffff，只需要构造出0x55555555即可。由于题目只允许使用0~255间的整数，因此可以用移位运算符来构造：0x55+(0x55&lt;&lt;8)=0x5555，0x5555+(0x5555&lt;&lt;16)=0x55555555。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">allOddBits</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> num=<span class="number">85</span>+(<span class="number">85</span>&lt;&lt;<span class="number">8</span>);</span><br><span class="line">    <span class="type">int</span> num2=num+(num&lt;&lt;<span class="number">16</span>);</span><br><span class="line">    <span class="keyword">return</span> !((num2|x)+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="negate">negate</h3><p>题目要求：返回-x。只允许使用 ! ~ &amp; ^ | + &lt;&lt; &gt;&gt; 来实现。使用的运算符个数不超过5。</p><p>思路：-x=~x+1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">negate</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ~x+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="isAsciiDigit">isAsciiDigit</h3><p>题目要求：如果 x 的ASCII码满足 0x30 &lt;= x &lt;= 0x39，返回1。只允许使用 ! ~ &amp; ^ | + &lt;&lt; &gt;&gt; 来实现。使用的运算符个数不超过15。</p><p>思路：当0x30 &lt;= x &lt;= 0x39时，x-30&gt;=0 , 39-x&gt;=0，即 x-30 , 39-x 的符号位均为0。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">isAsciiDigit</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> temp1=x+(~<span class="number">0x2f</span>);        <span class="comment">// 相当于temp1=x-0x30;</span></span><br><span class="line">    <span class="type">int</span> temp2=<span class="number">0x3a</span>+(~x);        <span class="comment">// 相当于temp2=0x39-x;</span></span><br><span class="line">    <span class="type">int</span> sign1=(temp1&gt;&gt;<span class="number">31</span>)&amp;<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> sign2=(temp2&gt;&gt;<span class="number">31</span>)&amp;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> (!sign1)&amp;(!sign2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="conditional">conditional</h3><p>题目要求：返回x ? y : z。只允许使用 ! ~ &amp; ^ | + &lt;&lt; &gt;&gt; 来实现。使用的运算符个数不超过16。</p><p>思路：依题意当 x 不为0时返回 y ，当 x 为0时返回 z 。假设返回 y，只需返回 (y&amp;0xffffffff)+(z&amp;0x0)；假设返回 z，则返回 (y&amp;0x0)+(z&amp;0xffffffff)，所以想办法让 x 为0和1时对应0xffffffff和0x0即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">conditional</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> z)</span> &#123;</span><br><span class="line">    <span class="type">int</span> temp=!x;</span><br><span class="line">    temp=~temp+<span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 当x=0时temp为0xffffffff，否则temp为0</span></span><br><span class="line">    <span class="comment">// 写成 int temp=~(!x)+1; 也是可以通过的，不过编译器会有warning。</span></span><br><span class="line">    <span class="keyword">return</span> (y&amp;~temp)+(z&amp;temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="isLessOrEqual">isLessOrEqual</h3><p>题目要求：如果 x&lt;=y，返回1，否则返回0。只允许使用 ! ~ &amp; ^ | + &lt;&lt; &gt;&gt; 来实现。使用的运算符个数不超过24。</p><p>思路：一种直接的想法是先计算 y-x，再检查符号位。y-x 的计算可以用反码算得。如果符号位是1就说明 x&gt;y。但是这种方法有一个问题：万一 y 是一个很大的正数，而 x 是一个很小的负数，明明 y-x 应该为正数，但在实际情况中却因为溢出而变成了负数！所以应该分两种情况讨论：</p><ul><li>x 与 y 的符号位不同：返回 x 的符号位</li><li>x 与 y 的符号位相同：返回 y-x 的符号位取反后的值</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">isLessOrEqual</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    <span class="type">int</span> xSign=(x&gt;&gt;<span class="number">31</span>)&amp;<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> ySign=(y&gt;&gt;<span class="number">31</span>)&amp;<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> nEqual=xSign^ySign;</span><br><span class="line">    <span class="type">int</span> minus=(~x)+<span class="number">1</span>+y;</span><br><span class="line">    <span class="type">int</span> minusSign=!((minus&gt;&gt;<span class="number">31</span>)&amp;<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> (nEqual&amp;xSign)+((!nEqual)&amp;minusSign);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="logicalNeg">logicalNeg</h3><p>题目要求：使用 ~ &amp; ^ | + &lt;&lt; &gt;&gt; 运算符实现 ! 。使用的运算符个数不超过12。</p><p>思路：这个问题要将0变成1，而非零的数变成0。这就要求要找到一个办法将0和非零的数区分开。注意到0是唯一一个满足 x==-x 的数，也就是说，经过~x+1这一运算，0的符号位仍旧不变，而其它的符号位变了。可以利用这点来实现 !。由此可以得到以下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">logicalNeg</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> temp=~x+<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> beginSign=(x&gt;&gt;<span class="number">31</span>)&amp;<span class="number">1</span>;        <span class="comment">// x 的符号位</span></span><br><span class="line">    <span class="type">int</span> endSign=(temp&gt;&gt;<span class="number">31</span>)&amp;<span class="number">1</span>;       <span class="comment">// -x 的符号位</span></span><br><span class="line">    <span class="type">int</span> nZero=beginSign^endSign;</span><br><span class="line">    <span class="comment">// 当 x 的符号位与 -x 不同时，x不为0，即 nZero=1；否则 nZero=0。</span></span><br><span class="line">    <span class="keyword">return</span> ~nZero+<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果直接这样提交的话，会发现答案是错的。错在哪呢？原来，在利用 x=-x 时，我们忽略了一个重要例外：当 x=0x80000000 时，~x 也等于 0x80000000，此时 ~x+1 等于 0x80000001，这个时候 x 的符号位也不变。注意到这个时候 x 和 -x 的符号位都为1，因此只需将 <code>int nZero=beginSign^endSign;</code> 改为 <code>int nZero=beginSign|endSign;</code> 即可。修正后的代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">logicalNeg</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> temp=~x+<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> beginSign=(x&gt;&gt;<span class="number">31</span>)&amp;<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> endSign=(temp&gt;&gt;<span class="number">31</span>)&amp;<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> nZero=beginSign|endSign;</span><br><span class="line">    <span class="keyword">return</span> ~nZero+<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在就可以顺利通过了。</p><h3 id="howManyBits">howManyBits</h3><p>题目要求：返回表示有符号数 x 所需的最小的位数。只允许使用 ! ~ &amp; ^ | + &lt;&lt; &gt;&gt; 来实现。使用的运算符个数不超过90。</p><p>思路：首先要明白题目的意思。1位数可以表示-1,0，2位数可以表示-2,-1,0,1，3位数可以表示-4~3……也就是说，n位数可以表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">-2^{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{n-1}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 之间的数。</p><p>为了像正数一样处理负数，可先将负数转化为它的补码（易知表示 x 和表示 ~x 所需要的位数是一样的）。</p><p>在这个问题中，可以采用一种二分的思想来计算位数。<br>对于一个32位的数，先判断前16位是否全为0。如果不是，知道至少需要用16位表示，并进一步分析前16位；否则进一步分析后16位。<br>对于一个16位的数，先判断前8位是否全为0。如果不是，表示所需的位数+8，并进一步分析前8位；否则进一步分析后8位。<br>以此类推，最终可以确定表示所需的位数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">howManyBits</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> total=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> isNegate=~((x&gt;&gt;<span class="number">31</span>)&amp;<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> judge=(isNegate&amp;~x)+(~isNegate&amp;x);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> cnt16=!(!(judge&gt;&gt;<span class="number">16</span>))&lt;&lt;<span class="number">4</span>;</span><br><span class="line">    <span class="type">int</span> check16=judge&gt;&gt;cnt16;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> cnt8=!(!(check16&gt;&gt;<span class="number">8</span>))&lt;&lt;<span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> check8=check16&gt;&gt;cnt8;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> cnt4=!(!(check8&gt;&gt;<span class="number">4</span>))&lt;&lt;<span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> check4=check8&gt;&gt;cnt4;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> cnt2=!(!(check4&gt;&gt;<span class="number">2</span>))&lt;&lt;<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> check2=check4&gt;&gt;cnt2;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> cnt1=!(!(check2&gt;&gt;<span class="number">1</span>));</span><br><span class="line">    <span class="type">int</span> check1=check2&gt;&gt;cnt1;</span><br><span class="line"></span><br><span class="line">    total=cnt16+cnt8+cnt4+cnt2+cnt1+check1+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="floatScale2">floatScale2</h3><p>题目要求：将浮点数乘2。允许使用整型、无符号型的运算符，以及 &amp;&amp; || if while 。运算符个数不超过30。</p><p>思路：开始之前，还是有必要回顾一下单精度浮点数的表示。</p><p><img src="../img/posts/float.svg" alt="单精度浮点数表示"></p><p>一般情况下 ( <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo mathvariant="normal">≠</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">E\neq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo mathvariant="normal">≠</mo><mn>255</mn></mrow><annotation encoding="application/x-tex">E\neq 255</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">255</span></span></span></span> )，这个浮点数表示的数字为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>S</mi></msup><mo>⋅</mo><mo stretchy="false">(</mo><mn>1.</mn><mi>F</mi><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mi>E</mi><mo>−</mo><mn>127</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-1)^S\cdot (1.F)\cdot (2^{E-127})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1.</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mbin mtight">−</span><span class="mord mtight">127</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，但是有几个例外：</p><ul><li>当 E=0 时，为非规格化的浮点数。特别地，当 S, E, F 都为0时表示浮点数0.0</li><li>当 E=0xff 且 F=0 时表示无穷大</li><li>当 E=0xff 且 F 不为0时表示 NaN</li></ul><p>因此，一般情况下，若浮点数不溢出，将指数部分加1即可；若溢出，还需要额外将尾数部分置为0。非规格化的数保留 S 不变并将剩余部分乘以2。几个特殊的数值保留原样返回即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="title function_">floatScale2</span><span class="params">(<span class="type">unsigned</span> uf)</span> &#123;</span><br><span class="line">    <span class="type">int</span> e=(uf&gt;&gt;<span class="number">23</span>)&amp;<span class="number">0xff</span>;</span><br><span class="line">    <span class="type">int</span> s=uf&amp;(<span class="number">1</span>&lt;&lt;<span class="number">31</span>);</span><br><span class="line">    <span class="type">int</span> setF=(<span class="number">-1</span>)&lt;&lt;<span class="number">23</span>;</span><br><span class="line">    <span class="type">int</span> multi2=<span class="number">1</span>&lt;&lt;<span class="number">23</span>;</span><br><span class="line">    <span class="comment">// 直接返回inf和NaN</span></span><br><span class="line">    <span class="keyword">if</span>(e==<span class="number">0xff</span>)</span><br><span class="line">        <span class="keyword">return</span> uf;</span><br><span class="line">    <span class="comment">// 如果是0，S不变，其余部分乘2</span></span><br><span class="line">    <span class="keyword">if</span>(e==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        uf=(uf*<span class="number">2</span>)^s;</span><br><span class="line">        <span class="keyword">return</span> uf;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 指数部分加1</span></span><br><span class="line">    uf=uf+multi2;</span><br><span class="line">    <span class="comment">// 若乘2后溢出，输出inf</span></span><br><span class="line">    <span class="keyword">if</span>(e==<span class="number">0xff</span>)</span><br><span class="line">        uf=uf&amp;setF;</span><br><span class="line">    <span class="keyword">return</span> uf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="floatFloat2Int">floatFloat2Int</h3><p>题目要求：将单精度浮点数转化为整型数，若浮点数为inf或NaN或者超出整型范围的则返回0x80000000u。允许使用整型、无符号型的运算符，以及 &amp;&amp; || if while 。运算符个数不超过30。</p><p>思路：根据浮点数可得到符号位、指数部分。原来的浮点数将前8位置为0，第9位置为1可得到该浮点数的绝对值的整型表示。</p><p>然后根据指数部分移位。</p><ul><li>若 E&gt;127+23 ，应左移 E-150 位。特别地，当 E&gt;=127+31，即 E&gt;=158时将会溢出，此时应返回0x80000000u。</li><li>若 E&lt;127+23 ，应右移 E-150 位。特别地，当 E&lt;127 时，说明这个浮点数的绝对值小于1，应抛弃小数部分直接返回0。</li></ul><p>最后再还原符号位。若为0或负数，直接取负即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">floatFloat2Int</span><span class="params">(<span class="type">unsigned</span> uf)</span> &#123;</span><br><span class="line">    <span class="type">int</span> s=(uf&gt;&gt;<span class="number">31</span>)&amp;<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> e=(uf&gt;&gt;<span class="number">23</span>)&amp;<span class="number">0xff</span>;</span><br><span class="line">    <span class="type">int</span> temp=e<span class="number">-150</span>;</span><br><span class="line">    uf=uf&amp;(<span class="number">0xff</span>+(<span class="number">0xff</span>&lt;&lt;<span class="number">8</span>)+(<span class="number">0xff</span>&lt;&lt;<span class="number">16</span>));</span><br><span class="line">    <span class="comment">// 即 uf=uf&amp;0x00ffffff</span></span><br><span class="line">    uf=uf|(<span class="number">1</span>&lt;&lt;<span class="number">23</span>);</span><br><span class="line">    <span class="keyword">if</span>(e&gt;=<span class="number">158</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>&lt;&lt;<span class="number">31</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(e&gt;=<span class="number">150</span>)</span><br><span class="line">        uf=uf&lt;&lt;temp;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(e&gt;=<span class="number">127</span>)</span><br><span class="line">        uf=uf&gt;&gt;(-temp);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        uf=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(s==<span class="number">1</span>)</span><br><span class="line">        uf=-uf;</span><br><span class="line">    <span class="keyword">return</span> uf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="floatPower2">floatPower2</h3><p>题目要求：返回2.0^x。允许使用整型、无符号型的运算符，以及 &amp;&amp; || if while 。运算符个数不超过30。</p><p>思路：根据题意只需要设置指数部分。当 E 的范围为 0 &lt; E &lt; 255，也即 -127 &lt; x &lt; 128 时返回 E&lt;&lt;23 。当 E&lt;=0 和 E&gt;=255 时特殊处理。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="title function_">floatPower2</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=<span class="number">-127</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x&gt;=<span class="number">128</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0x7f800000</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">unsigned</span> e=x+<span class="number">127</span>;</span><br><span class="line">        <span class="keyword">return</span> e&lt;&lt;<span class="number">23</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完结撒花">完结撒花</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Correctness Results     Perf Results</span><br><span class="line">Points  Rating  Errors  Points  Ops     Puzzle</span><br><span class="line">1       1       0       2       7       bitXor</span><br><span class="line">1       1       0       2       1       tmin</span><br><span class="line">1       1       0       2       7       isTmax</span><br><span class="line">2       2       0       2       7       allOddBits</span><br><span class="line">2       2       0       2       2       negate</span><br><span class="line">3       3       0       2       11      isAsciiDigit</span><br><span class="line">3       3       0       2       7       conditional</span><br><span class="line">3       3       0       2       15      isLessOrEqual</span><br><span class="line">4       4       0       2       9       logicalNeg</span><br><span class="line">4       4       0       2       39      howManyBits</span><br><span class="line">4       4       0       2       14      floatScale2</span><br><span class="line">4       4       0       2       21      floatFloat2Int</span><br><span class="line">4       4       0       2       5       floatPower2</span><br><span class="line"></span><br><span class="line">Score = 62/62 [36/36 Corr + 26/26 Perf] (145 total operators)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSAPP </tag>
            
            <tag> 实验报告 </tag>
            
            <tag> 入门 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
